{"ast":null,"code":"import _toConsumableArray from \"/Users/clarencetee/Documents/PERSONAL/Programming/react/myreads/reactnd-project-myreads-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/clarencetee/Documents/PERSONAL/Programming/react/myreads/reactnd-project-myreads-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/clarencetee/Documents/PERSONAL/Programming/react/myreads/reactnd-project-myreads-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/clarencetee/Documents/PERSONAL/Programming/react/myreads/reactnd-project-myreads-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/clarencetee/Documents/PERSONAL/Programming/react/myreads/reactnd-project-myreads-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/clarencetee/Documents/PERSONAL/Programming/react/myreads/reactnd-project-myreads-starter/src/components/search.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as BooksAPI from \"../BooksAPI\";\nimport serializeForm from \"form-serialize\";\nimport Option from \"./options\";\n\nvar Searchpage = /*#__PURE__*/function (_Component) {\n  _inherits(Searchpage, _Component);\n\n  var _super = _createSuper(Searchpage);\n\n  function Searchpage() {\n    var _this;\n\n    _classCallCheck(this, Searchpage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      query: \"\",\n      books: []\n    };\n\n    _this.updateQuery = function (query) {\n      _this.setState({\n        query: query.trim()\n      });\n    };\n\n    _this.clearQuery = function () {\n      _this.updateQuery(\"\");\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var query = _this.state.query;\n      BooksAPI.search(query).then(function (query) {\n        _this.setState({\n          books: query\n        });\n      });\n    };\n\n    _this.fetchSearch = function () {\n      var query = _this.state.query;\n      BooksAPI.search(query).then(function (query) {\n        _this.setState({\n          books: query\n        });\n      });\n    };\n\n    _this.onChange = function (book, event) {\n      var newOption = event.target.value;\n      var id = book.id;\n\n      var books = _toConsumableArray(_this.state.books);\n\n      BooksAPI.update(book, newOption).then(function (result) {\n        books.forEach(function (array) {\n          if (array.id === id) {\n            array[\"shelf\"] = newOption;\n          }\n        });\n      });\n\n      _this.setState({\n        books: books\n      });\n\n      _this.props.handleSearch(book, newOption);\n\n      console.log(_this.state.books);\n    };\n\n    return _this;\n  }\n\n  _createClass(Searchpage, [{\n    key: \"render\",\n\n    /* also need a callback above to update the main state in home*/\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-books\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"close-search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, \"Close\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title or author\",\n        value: this.state.query,\n        onChange: function onChange(event) {\n          return _this2.updateQuery(event.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"clear-search\",\n        onClick: this.clearQuery,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, \"Clear\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bookshelf-books\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"list-books\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"list-books-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bookshelf\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bookshelf-books\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }, this.state.books.map(function (book) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: book.id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"book\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"book-top\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"book-cover\",\n          style: {\n            width: 128,\n            height: 193,\n            backgroundImage: \"url(\" + book.imageLinks.thumbnail + \")\"\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 31\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"book-shelf-changer\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"select\", {\n          key: book.id,\n          id: book.id,\n          value: book.shelf,\n          selected: book.shelf,\n          onChange: function onChange(event) {\n            return _this2.onChange(book, event);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Option, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 35\n          }\n        })))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"book-title\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }\n        }, book.title), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"book-authors\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }\n        }, book.authors)));\n      })))))))));\n    }\n  }]);\n\n  return Searchpage;\n}(Component);\n\nexport default Searchpage;\n/*\n\nonChange = (book, event) => {\n    const newOption = event.target.value;\n    const index = this.state.books.indexOf(book);\n    BooksAPI.update(book, newOption).then((result) => {\n      const books = [...this.state.books];\n      books[index] = result;\n      this.setState({ books: books });\n    });\n    console.log(this.state.books);\n  };\n\n\ncomponentDidUpdate(prevState) {\n    if (this.state.books !== prevState.books) {\n      this.onChange = (book, event) => {\n        const newOption = event.target.value;\n        const index = this.state.books.indexOf(book);\n        BooksAPI.update(book, newOption).then((result) => {\n          const books = [...this.state.books];\n          books[index] = result;\n          this.setState({ books: books });\n        });\n        console.log(this.state.books);\n      };\n    }\n  }\nonChange = (book, event) => {\n    const newOption = event.target.value;\n    BooksAPI.update(book, newOption).then((result) => console.log(result));\n    console.log(this.state.books);\n  };\n\n\n  */","map":{"version":3,"sources":["/Users/clarencetee/Documents/PERSONAL/Programming/react/myreads/reactnd-project-myreads-starter/src/components/search.js"],"names":["React","Component","Link","BooksAPI","serializeForm","Option","Searchpage","state","query","books","updateQuery","setState","trim","clearQuery","handleSubmit","event","preventDefault","search","then","fetchSearch","onChange","book","newOption","target","value","id","update","result","forEach","array","props","handleSearch","console","log","map","width","height","backgroundImage","imageLinks","thumbnail","shelf","title","authors"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as BooksAPI from \"../BooksAPI\";\nimport serializeForm from \"form-serialize\";\nimport Option from \"./options\";\n\nclass Searchpage extends Component {\n  state = {\n    query: \"\",\n    books: [],\n  };\n\n  updateQuery = (query) => {\n    this.setState({\n      query: query.trim(),\n    });\n  };\n\n  clearQuery = () => {\n    this.updateQuery(\"\");\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const query = this.state.query;\n    BooksAPI.search(query).then((query) => {\n      this.setState({\n        books: query,\n      });\n    });\n  };\n\n  fetchSearch = () => {\n    const query = this.state.query;\n    BooksAPI.search(query).then((query) => {\n      this.setState({\n        books: query,\n      });\n    });\n  };\n\n  onChange = (book, event) => {\n    const newOption = event.target.value;\n    const id = book.id;\n    const books = [...this.state.books];\n    BooksAPI.update(book, newOption).then((result) => {\n      books.forEach((array) => {\n        if (array.id === id) {\n          array[\"shelf\"] = newOption;\n        }\n      });\n    });\n    this.setState({\n      books: books,\n    });\n    this.props.handleSearch(book, newOption);\n    console.log(this.state.books);\n  };\n\n  /* also need a callback above to update the main state in home*/\n\n  render() {\n    return (\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <Link to=\"/\">\n            <button className=\"close-search\">Close</button>\n          </Link>\n          <div className=\"search-books-input-wrapper\">\n            <form onSubmit={this.handleSubmit}>\n              <input\n                type=\"text\"\n                placeholder=\"Search by title or author\"\n                value={this.state.query}\n                onChange={(event) => this.updateQuery(event.target.value)}\n              />\n            </form>\n          </div>\n          <button className=\"clear-search\" onClick={this.clearQuery}>\n            Clear\n          </button>\n        </div>\n        <div className=\"search-books-results\">\n          <div className=\"bookshelf-books\">\n            <div className=\"list-books\">\n              <div className=\"list-books-content\">\n                <div className=\"bookshelf\">\n                  <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">\n                      {this.state.books.map((book) => (\n                        <li key={book.id}>\n                          <div className=\"book\">\n                            <div className=\"book-top\">\n                              <div\n                                className=\"book-cover\"\n                                style={{\n                                  width: 128,\n                                  height: 193,\n                                  backgroundImage:\n                                    \"url(\" + book.imageLinks.thumbnail + \")\",\n                                }}\n                              ></div>\n                              <div className=\"book-shelf-changer\">\n                                <select\n                                  key={book.id}\n                                  id={book.id}\n                                  value={book.shelf}\n                                  selected={book.shelf}\n                                  onChange={(event) =>\n                                    this.onChange(book, event)\n                                  }\n                                >\n                                  <Option />\n                                </select>\n                              </div>\n                            </div>\n                            <div className=\"book-title\">{book.title}</div>\n                            <div className=\"book-authors\">{book.authors}</div>\n                          </div>\n                        </li>\n                      ))}\n                    </ol>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Searchpage;\n\n/*\n\nonChange = (book, event) => {\n    const newOption = event.target.value;\n    const index = this.state.books.indexOf(book);\n    BooksAPI.update(book, newOption).then((result) => {\n      const books = [...this.state.books];\n      books[index] = result;\n      this.setState({ books: books });\n    });\n    console.log(this.state.books);\n  };\n\n\ncomponentDidUpdate(prevState) {\n    if (this.state.books !== prevState.books) {\n      this.onChange = (book, event) => {\n        const newOption = event.target.value;\n        const index = this.state.books.indexOf(book);\n        BooksAPI.update(book, newOption).then((result) => {\n          const books = [...this.state.books];\n          books[index] = result;\n          this.setState({ books: books });\n        });\n        console.log(this.state.books);\n      };\n    }\n  }\nonChange = (book, event) => {\n    const newOption = event.target.value;\n    BooksAPI.update(book, newOption).then((result) => console.log(result));\n    console.log(this.state.books);\n  };\n\n\n  */\n"]},"metadata":{},"sourceType":"module"}