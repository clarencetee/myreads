{"ast":null,"code":"var _jsxFileName = \"/Users/clarencetee/movies-app/src/components/counters.jsx\";\nimport React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\nclass Counters extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.onReset,\n      className: \"btn btn-primary btn-sm m-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }\n    }, \"Reset\"), this.state.counters.map(counter => /*#__PURE__*/React.createElement(Counter, {\n      key: counter.id,\n      value: counter.value,\n      onDelete: this.handleDelete,\n      onIncrement: this.handleIncrement,\n      counter: counter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, \"Counter #\", counter.id))));\n  }\n\n}\n/*note in the above that the Counter key is read by React but we cant assess it, we need id to change state */\n\n/* by setting counter={counter} we ensure that whenever we update properties of counter, this is always passed down to Counters*/\n\n\nexport default Counters;","map":{"version":3,"sources":["/Users/clarencetee/movies-app/src/components/counters.jsx"],"names":["React","Component","Counter","Counters","render","props","onReset","state","counters","map","counter","id","value","handleDelete","handleIncrement"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC/BG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,OADtB;AAEE,MAAA,SAAS,EAAC,4BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAOG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,GAApB,CAAyBC,OAAD,iBACvB,oBAAC,OAAD;AACE,MAAA,GAAG,EAAEA,OAAO,CAACC,EADf;AAEE,MAAA,KAAK,EAAED,OAAO,CAACE,KAFjB;AAGE,MAAA,QAAQ,EAAE,KAAKC,YAHjB;AAIE,MAAA,WAAW,EAAE,KAAKC,eAJpB;AAKE,MAAA,OAAO,EAAEJ,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAcA,OAAO,CAACC,EAAtB,CAPF,CADD,CAPH,CADF;AAqBD;;AAvB8B;AA0BjC;;AACA;;;AAEA,eAAeR,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\nclass Counters extends Component {\n  render() {\n    return (\n      <div>\n        <button\n          onClick={this.props.onReset}\n          className=\"btn btn-primary btn-sm m-2\"\n        >\n          Reset\n        </button>\n        {this.state.counters.map((counter) => (\n          <Counter\n            key={counter.id}\n            value={counter.value}\n            onDelete={this.handleDelete}\n            onIncrement={this.handleIncrement}\n            counter={counter}\n          >\n            <h4>Counter #{counter.id}</h4>\n          </Counter>\n        ))}\n      </div>\n    );\n  }\n}\n\n/*note in the above that the Counter key is read by React but we cant assess it, we need id to change state */\n/* by setting counter={counter} we ensure that whenever we update properties of counter, this is always passed down to Counters*/\n\nexport default Counters;\n"]},"metadata":{},"sourceType":"module"}