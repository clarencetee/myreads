{"ast":null,"code":"var _jsxFileName = \"/Users/clarencetee/movies-app/src/components/counters.jsx\";\nimport React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\nclass Counters extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 0\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 4,\n        value: 0\n      }]\n    };\n\n    this.handleReset = () => {\n      const counters = this.state.counters.map(c => {\n        c.value = 0;\n        return c;\n      });\n      this.setState({\n        counters: counters\n      });\n    };\n\n    this.handleIncrement = counter => {\n      const counters = [...this.state.counters];\n      counters[0] = { ...counter\n      };\n      counters[0].value++;\n      console.log(this.state.counters[0]);\n    };\n\n    this.handleDelete = counterID => {\n      const counters = this.state.counters.filter(c => c.id !== counterID);\n      this.setState({\n        counters: counters\n      });\n      /* note the use of colons rather than equal sign because counters is an object*/\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleReset,\n      className: \"btn btn-primary btn-sm m-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"Reset\"), this.state.counters.map(counter => /*#__PURE__*/React.createElement(Counter, {\n      key: counter.id,\n      value: counter.value,\n      onDelete: this.handleDelete,\n      onIncrement: this.handleIncrement,\n      counter: counter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, \"Counter #\", counter.id))));\n  }\n\n}\n/*note in the above that the Counter key is read by React but we cant assess it, we need id to change state */\n\n/* by setting counter={counter} we ensure that whenever we update properties of counter, this is always rendered to Counters*/\n\n\nexport default Counters;","map":{"version":3,"sources":["/Users/clarencetee/movies-app/src/components/counters.jsx"],"names":["React","Component","Counter","Counters","state","counters","id","value","handleReset","map","c","setState","handleIncrement","counter","console","log","handleDelete","counterID","filter","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BG,KAD+B,GACvB;AACNC,MAAAA,QAAQ,EAAE,CACR;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OADQ,EAER;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAFQ,EAGR;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAHQ,EAIR;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAJQ;AADJ,KADuB;;AAAA,SAU/BC,WAV+B,GAUjB,MAAM;AAClB,YAAMH,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBI,GAApB,CAAyBC,CAAD,IAAO;AAC9CA,QAAAA,CAAC,CAACH,KAAF,GAAU,CAAV;AACA,eAAOG,CAAP;AACD,OAHgB,CAAjB;AAIA,WAAKC,QAAL,CAAc;AAAEN,QAAAA,QAAQ,EAAEA;AAAZ,OAAd;AACD,KAhB8B;;AAAA,SAkB/BO,eAlB+B,GAkBZC,OAAD,IAAa;AAC7B,YAAMR,QAAQ,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,QAAf,CAAjB;AACAA,MAAAA,QAAQ,CAAC,CAAD,CAAR,GAAc,EAAE,GAAGQ;AAAL,OAAd;AACAR,MAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYE,KAAZ;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWC,QAAX,CAAoB,CAApB,CAAZ;AACD,KAvB8B;;AAAA,SA2B/BW,YA3B+B,GA2BfC,SAAD,IAAe;AAC5B,YAAMZ,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBa,MAApB,CAA4BR,CAAD,IAAOA,CAAC,CAACJ,EAAF,KAASW,SAA3C,CAAjB;AACA,WAAKN,QAAL,CAAc;AACZN,QAAAA,QAAQ,EAAEA;AADE,OAAd;AAEI;AACL,KAhC8B;AAAA;;AAkC/Bc,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,OAAO,EAAE,KAAKX,WADhB;AAEE,MAAA,SAAS,EAAC,4BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAOG,KAAKJ,KAAL,CAAWC,QAAX,CAAoBI,GAApB,CAAyBI,OAAD,iBACvB,oBAAC,OAAD;AACE,MAAA,GAAG,EAAEA,OAAO,CAACP,EADf;AAEE,MAAA,KAAK,EAAEO,OAAO,CAACN,KAFjB;AAGE,MAAA,QAAQ,EAAE,KAAKS,YAHjB;AAIE,MAAA,WAAW,EAAE,KAAKJ,eAJpB;AAKE,MAAA,OAAO,EAAEC,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAcA,OAAO,CAACP,EAAtB,CAPF,CADD,CAPH,CADF;AAqBD;;AAxD8B;AA2DjC;;AACA;;;AAEA,eAAeH,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\nclass Counters extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 0 },\n      { id: 2, value: 0 },\n      { id: 3, value: 0 },\n      { id: 4, value: 0 },\n    ],\n  };\n\n  handleReset = () => {\n    const counters = this.state.counters.map((c) => {\n      c.value = 0;\n      return c;\n    });\n    this.setState({ counters: counters });\n  };\n\n  handleIncrement = (counter) => {\n    const counters = [...this.state.counters];\n    counters[0] = { ...counter };\n    counters[0].value++;\n    console.log(this.state.counters[0]);\n  };\n\n  /* note that the event handler is in the parent \ncomponent as it is the one that owns the piece of the counter state */\n  handleDelete = (counterID) => {\n    const counters = this.state.counters.filter((c) => c.id !== counterID);\n    this.setState({\n      counters: counters,\n    }); /* note the use of colons rather than equal sign because counters is an object*/\n  };\n\n  render() {\n    return (\n      <div>\n        <button\n          onClick={this.handleReset}\n          className=\"btn btn-primary btn-sm m-2\"\n        >\n          Reset\n        </button>\n        {this.state.counters.map((counter) => (\n          <Counter\n            key={counter.id}\n            value={counter.value}\n            onDelete={this.handleDelete}\n            onIncrement={this.handleIncrement}\n            counter={counter}\n          >\n            <h4>Counter #{counter.id}</h4>\n          </Counter>\n        ))}\n      </div>\n    );\n  }\n}\n\n/*note in the above that the Counter key is read by React but we cant assess it, we need id to change state */\n/* by setting counter={counter} we ensure that whenever we update properties of counter, this is always rendered to Counters*/\n\nexport default Counters;\n"]},"metadata":{},"sourceType":"module"}