{"ast":null,"code":"var _jsxFileName = \"/Users/clarencetee/movies-app/src/components/counter.jsx\";\nimport React, { Component } from \"react\";\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: this.props.counter.value,\n      // will set the value for each counter to what we defined in Counters\n      tags: [\"tag1\", \"tag2\", \"tag3\"]\n    };\n\n    this.handleIncrement = () => {\n      this.setState({\n        value: this.state.value + 1\n      });\n    };\n  }\n\n  renderTags() {\n    if (this.state.tags.length === 0) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 46\n      }\n    }, \" There are no tags!\");\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }, this.state.tags.map(tag => /*#__PURE__*/React.createElement(\"li\", {\n      key: tag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }\n    }, \" \", tag, \" \")));\n  }\n  /* this is an alternate way to bind the object to the event handler\n  constructor() {\n    super();\n    this.handleIncrement = this.handleIncrement.bind(this);\n  }\n  */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, this.props.children, /*#__PURE__*/React.createElement(\"span\", {\n      className: this.getBadgeClasses(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, this.formatCount()), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleIncrement,\n      className: \"btn btn-secondary btn-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, \"Increment\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-danger btn-sm m-2\",\n      onClick: () => this.props.onDelete(this.props.counter.id)\n      /*this is how we pass arguments through event handlers */\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, \"Delete\"), this.state.tags.length === 0 && \"Please create a new tag!\", this.renderTags());\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 \";\n    classes += this.state.value === 0 ? \"badge-warning\" : \"badge-primary\";\n    return classes;\n  }\n\n  formatCount() {\n    return this.state.value === 0 ? \"Zero\" : this.state.value;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/clarencetee/movies-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","value","props","counter","tags","handleIncrement","setState","renderTags","length","map","tag","render","children","getBadgeClasses","formatCount","onDelete","id","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BE,KAD8B,GACtB;AACNC,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,OAAX,CAAmBF,KADpB;AAC2B;AACjCG,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB;AAFA,KADsB;;AAAA,SAwB9BC,eAxB8B,GAwBZ,MAAM;AACtB,WAAKC,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAd;AACD,KA1B6B;AAAA;;AAM9BM,EAAAA,UAAU,GAAG;AACX,QAAI,KAAKP,KAAL,CAAWI,IAAX,CAAgBI,MAAhB,KAA2B,CAA/B,EAAkC,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AAClC,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKR,KAAL,CAAWI,IAAX,CAAgBK,GAAhB,CAAqBC,GAAD,iBACnB;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAgBA,GAAhB,MADD,CADH,CADF;AAOD;AAED;;;;;;;;AAWAC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKT,KAAL,CAAWU,QADd,eAEE;AAAM,MAAA,SAAS,EAAE,KAAKC,eAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKC,WAAL,EAA1C,CAFF,eAGE;AACE,MAAA,OAAO,EAAE,KAAKT,eADhB;AAEE,MAAA,SAAS,EAAC,0BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,eASE;AACE,MAAA,SAAS,EAAC,2BADZ;AAEE,MAAA,OAAO,EAAE,MACP,KAAKH,KAAL,CAAWa,QAAX,CAAoB,KAAKb,KAAL,CAAWC,OAAX,CAAmBa,EAAvC;AACA;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,EAiBG,KAAKhB,KAAL,CAAWI,IAAX,CAAgBI,MAAhB,KAA2B,CAA3B,IAAgC,0BAjBnC,EAkBG,KAAKD,UAAL,EAlBH,CADF;AAsBD;;AAEDM,EAAAA,eAAe,GAAG;AAChB,QAAII,OAAO,GAAG,YAAd;AACAA,IAAAA,OAAO,IAAI,KAAKjB,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,eAAzB,GAA2C,eAAtD;AACA,WAAOgB,OAAP;AACD;;AAEDH,EAAAA,WAAW,GAAG;AACZ,WAAO,KAAKd,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,MAAzB,GAAkC,KAAKD,KAAL,CAAWC,KAApD;AACD;;AA7D6B;;AAgEhC,eAAeF,OAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Counter extends Component {\n  state = {\n    value: this.props.counter.value, // will set the value for each counter to what we defined in Counters\n    tags: [\"tag1\", \"tag2\", \"tag3\"],\n  };\n\n  renderTags() {\n    if (this.state.tags.length === 0) return <p> There are no tags!</p>;\n    return (\n      <ul>\n        {this.state.tags.map((tag) => (\n          <li key={tag}> {tag} </li>\n        ))}\n      </ul>\n    );\n  }\n\n  /* this is an alternate way to bind the object to the event handler\n  constructor() {\n    super();\n    this.handleIncrement = this.handleIncrement.bind(this);\n  }\n  */\n\n  handleIncrement = () => {\n    this.setState({ value: this.state.value + 1 });\n  };\n\n  render() {\n    return (\n      <div>\n        {this.props.children}\n        <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\n        <button\n          onClick={this.handleIncrement}\n          className=\"btn btn-secondary btn-sm\"\n        >\n          Increment\n        </button>\n        <button\n          className=\"btn btn-danger btn-sm m-2\"\n          onClick={() =>\n            this.props.onDelete(this.props.counter.id)\n          } /*this is how we pass arguments through event handlers */\n        >\n          Delete\n        </button>\n        {this.state.tags.length === 0 && \"Please create a new tag!\"}\n        {this.renderTags()}\n      </div>\n    );\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 \";\n    classes += this.state.value === 0 ? \"badge-warning\" : \"badge-primary\";\n    return classes;\n  }\n\n  formatCount() {\n    return this.state.value === 0 ? \"Zero\" : this.state.value;\n  }\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}