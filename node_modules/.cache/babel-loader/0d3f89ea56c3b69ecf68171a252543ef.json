{"ast":null,"code":"var _jsxFileName = \"/Users/clarencetee/movies-app/src/MovieCard.js\";\nimport React, { Component } from \"react\";\n\nclass MovieCard extends Component {\n  render() {\n    /*\n    Destructuring via ES6. We're getting the profiles, users, and movies properties\n    off of the pros passed into this presentational component. If you need a refresher on this syntax, check\n    out this course: https://www.udacity.com/course/es6-javascript-improved--ud356\n    */\n    const {\n      users,\n      usersWhoLikedMovie,\n      movieInfo\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: movieInfo.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, movieInfo.name), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }, \"Liked By:\"), !usersWhoLikedMovie || usersWhoLikedMovie.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }, \"None of the current users liked this movie.\") : /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }, usersWhoLikedMovie && usersWhoLikedMovie.map(userId => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: userId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }\n      }, users[userId].name));\n    })));\n  }\n\n}\n\nexport default MovieCard;","map":{"version":3,"sources":["/Users/clarencetee/movies-app/src/MovieCard.js"],"names":["React","Component","MovieCard","render","users","usersWhoLikedMovie","movieInfo","props","id","name","length","map","userId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAChCE,EAAAA,MAAM,GAAG;AACP;;;;;AAKA,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,kBAAT;AAA6BC,MAAAA;AAA7B,QAA2C,KAAKC,KAAtD;AAEA,wBACE;AAAI,MAAA,GAAG,EAAED,SAAS,CAACE,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,SAAS,CAACG,IAAf,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAIG,CAACJ,kBAAD,IAAuBA,kBAAkB,CAACK,MAAnB,KAA8B,CAArD,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,kBAAkB,IACjBA,kBAAkB,CAACM,GAAnB,CAAuBC,MAAM,IAAI;AAC/B,0BACE;AAAI,QAAA,GAAG,EAAEA,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIR,KAAK,CAACQ,MAAD,CAAL,CAAcH,IAAlB,CADF,CADF;AAKD,KAND,CAFJ,CAPJ,CADF;AAqBD;;AA9B+B;;AAiClC,eAAeP,SAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass MovieCard extends Component {\n  render() {\n    /*\n    Destructuring via ES6. We're getting the profiles, users, and movies properties\n    off of the pros passed into this presentational component. If you need a refresher on this syntax, check\n    out this course: https://www.udacity.com/course/es6-javascript-improved--ud356\n    */\n    const { users, usersWhoLikedMovie, movieInfo } = this.props;\n\n    return (\n      <li key={movieInfo.id}>\n        <h2>{movieInfo.name}</h2>\n        <h3>Liked By:</h3>\n\n        {!usersWhoLikedMovie || usersWhoLikedMovie.length === 0 ? (\n          <p>None of the current users liked this movie.</p>\n        ) : (\n          <ul>\n            {usersWhoLikedMovie &&\n              usersWhoLikedMovie.map(userId => {\n                return (\n                  <li key={userId}>\n                    <p>{users[userId].name}</p>\n                  </li>\n                );\n              })}\n          </ul>\n        )}\n      </li>\n    );\n  }\n}\n\nexport default MovieCard;\n"]},"metadata":{},"sourceType":"module"}